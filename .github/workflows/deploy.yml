name: Deploy to cPanel
on:
  push:
    branches: [ main ]

concurrency:
  group: deploy-to-cpanel
  cancel-in-progress: true
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      frontend-hash: ${{ steps.hash.outputs.frontend }}
      backend-hash: ${{ steps.hash.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Compute changed tree hashes
        id: hash
        run: |
          if [ -d frontend ]; then
            frontend_hash=$(git rev-list --objects HEAD -- frontend | git hash-object --stdin 2>/dev/null || echo "")
            echo "frontend=$frontend_hash" >> $GITHUB_OUTPUT
          else
            echo "frontend=" >> $GITHUB_OUTPUT
          fi
          if [ -d backend ]; then
            backend_hash=$(git rev-list --objects HEAD -- backend | git hash-object --stdin 2>/dev/null || echo "")
            echo "backend=$backend_hash" >> $GITHUB_OUTPUT
          else
            echo "backend=" >> $GITHUB_OUTPUT
          fi
      - name: Create frontend artifact
        if: steps.hash.outputs.frontend != ''
        run: |
          set -e
          cd frontend
          zip -r ../frontend-artifact.zip package.json package-lock.json public src build || true
      - name: Create backend artifact
        if: steps.hash.outputs.backend != ''
        run: |
          set -e
          cd backend
          zip -r ../backend-artifact.zip server.js db.js routes models uploads package.json package-lock.json || true
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deploy-artifacts
          path: |
            frontend-artifact.zip
            backend-artifact.zip

  frontend:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: deploy-artifacts
          path: .
      - name: Unpack frontend
        if: needs.prepare.outputs.frontend-hash != ''
        run: |
          unzip -o frontend-artifact.zip -d frontend || true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install & Build Frontend
        run: |
          cd frontend
          echo "REACT_APP_API_URL=https://ix.star-siec.edu.vn" > .env
          echo "NODE_ENV=production" >> .env
          npm ci --prefer-offline --no-audit --no-progress || exit 1
          npm run build --no-progress || exit 1
        env:
          CI: false
          NODE_OPTIONS: --max-old-space-size=4096
      - name: Deploy Frontend
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: star-siec.edu.vn
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: frontend/build/
          server-dir: /ix.star-siec.edu.vn/frontend/build/
          dangerous-clean-slate: false
          exclude: |
            **/*.map
            **/*.txt
            **/LICENSE
          state-name: .ftp-deploy-sync-state-frontend.json
          log-level: minimal
          timeout: 600000

  backend:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: deploy-artifacts
          path: .
      - name: Unpack backend
        if: needs.prepare.outputs.backend-hash != ''
        run: |
          unzip -o backend-artifact.zip -d backend-temp || true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
      - name: Prepare backend package
        if: needs.prepare.outputs.backend-hash != ''
        run: |
          set -e
          echo "NODE_ENV=production" > backend-temp/.env
          echo "PORT=3000" >> backend-temp/.env
          echo "DB_HOST=localhost" >> backend-temp/.env
          echo "DB_NAME=wsxcblqh_ix" >> backend-temp/.env
          echo "DB_USER=wsxcblqh_thanh" >> backend-temp/.env
          echo "DB_PASS=@Thanh562184" >> backend-temp/.env
          ls -la backend-temp || true
      - name: Deploy Backend
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: star-siec.edu.vn
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: backend-temp/
          server-dir: /ix.star-siec.edu.vn/backend/
          dangerous-clean-slate: false
          exclude: |
            **/node_modules/**
            **/*.map
            **/*.md
            package-lock.json
          state-name: .ftp-deploy-sync-state-backend.json
          log-level: minimal
          timeout: 600000
      - name: Notify Manual Restart
        run: |
          echo "✅ Backend đã được deploy lên cPanel."
          echo "📌 Vui lòng đăng nhập vào cPanel → Setup Node.js App → chọn app → nhấn Restart để khởi động lại server."