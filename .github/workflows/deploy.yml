name: Deploy to cPanel
on:
  push:
    branches: [ main ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install & Build Frontend
        run: |
          cd frontend
          echo "REACT_APP_API_URL=https://ix.star-siec.edu.vn/api/" > .env
          echo "NODE_ENV=production" >> .env
          npm ci --prefer-offline --no-audit --no-progress || exit 1
          npm run build --no-progress || exit 1
        env:
          CI: false
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Deploy Frontend
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: star-siec.edu.vn
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: frontend/build/
          server-dir: /ix.star-siec.edu.vn/frontend/build/
          dangerous-clean-slate: false
          exclude: |
            **/*.map
            **/*.txt
            **/LICENSE
          log-level: minimal
          timeout: 60000

  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Create Backend Package
        run: |
          mkdir -p backend-temp
          cp backend/{server.js,db.js} backend-temp/
          cp -r backend/{routes,models,uploads} backend-temp/
          echo '{
            "name": "backend",
            "version": "1.0.0",
            "main": "server.js",
            "type": "commonjs",
            "dependencies": {
              "cors": "2.8.5",
              "dotenv": "16.3.1",
              "express": "4.18.2",
              "multer": "1.4.5-lts.1",
              "mysql2": "3.6.1",
              "sequelize": "6.33.0",
              "bcryptjs": "3.0.2",
              "openai": "4.7.1"
            }
          }' > backend-temp/package.json
          
          echo "NODE_ENV=production" > backend-temp/.env
          echo "PORT=3000" >> backend-temp/.env
          echo "DB_HOST=localhost" >> backend-temp/.env
          echo "DB_NAME=wsxcblqh_ix" >> backend-temp/.env
          echo "DB_USER=wsxcblqh_thanh" >> backend-temp/.env
          echo "DB_PASS=@Thanh562184" >> backend-temp/.env
          
          cd backend-temp
          npm ci --prefer-offline --no-audit --no-progress --production

      - name: Deploy Backend
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: star-siec.edu.vn
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: backend-temp/
          server-dir: /ix.star-siec.edu.vn/backend/
          dangerous-clean-slate: false
          exclude: |
            **/*.map
            **/*.md
            package-lock.json
          log-level: minimal
          timeout: 60000

      - name: Restart Server
        run: |
          echo "<?php
          \$output = '';
          try {
              // Install dependencies
              \$install = shell_exec('cd /home/wsxcblqh/ix.star-siec.edu.vn/backend && /usr/local/bin/npm ci --production 2>&1');
              \$output .= \"Install: \$install\\n\";
              
              // Stop PM2
              \$stop = shell_exec('/usr/local/bin/pm2 delete server 2>/dev/null || true');
              \$output .= \"Stop: \$stop\\n\";
              
              // Start PM2
              \$start = shell_exec('cd /home/wsxcblqh/ix.star-siec.edu.vn/backend && NODE_ENV=production /usr/local/bin/pm2 start server.js --name \"server\" 2>&1');
              \$output .= \"Start: \$start\\n\";
              
              // Check status
              \$status = shell_exec('/usr/local/bin/pm2 list');
              if (strpos(\$status, 'online') === false) {
                  throw new Exception('Server failed to start');
              }
              \$output .= \"Status: \$status\";
              
          } catch (Exception \$e) {
              http_response_code(500);
              echo \"<pre>Error: \" . \$e->getMessage() . \"\\n\$output</pre>\";
              exit(1);
          }
          echo \"<pre>\$output</pre>\";
          ?>" > restart.php
          
          # Upload and execute with retry
          max_retries=3
          retry_count=0
          while [ $retry_count -lt $max_retries ]; do
            if curl -s -T restart.php -u "${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}" "ftp://star-siec.edu.vn/ix.star-siec.edu.vn/"; then
              response=$(curl -s "https://ix.star-siec.edu.vn/restart.php")
              if [[ $response != *"Error"* ]] && [[ $response != *"failed"* ]]; then
                echo "Server restarted successfully"
                rm restart.php
                exit 0
              fi
            fi
            retry_count=$((retry_count+1))
            [ $retry_count -lt $max_retries ] && echo "Retry $retry_count..." && sleep 5
          done
          echo "Failed to restart server after $max_retries attempts"
          exit 1