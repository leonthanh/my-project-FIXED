name: Deploy to cPanel
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16.x'

    # Build Frontend
    - name: Install & Build Frontend
      run: |
        cd frontend
        echo "REACT_APP_API_URL=https://ix.star-siec.edu.vn/api" > .env
        npm install
        npm run build
      env:
        CI: false

    # Deploy Frontend
    - name: Deploy Frontend
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: star-siec.edu.vn
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: frontend/build/
        server-dir: /ix.star-siec.edu.vn/frontend/build/
        dangerous-clean-slate: true

    # Prepare Backend Files
    - name: Setup Backend
      run: |
        # Create clean deploy directory
        rm -rf deploy-backend
        mkdir -p deploy-backend
        
        # Copy only necessary backend files
        cp backend/package.json deploy-backend/
        cp backend/server.js deploy-backend/
        mkdir -p deploy-backend/routes
        cp -r backend/routes/* deploy-backend/routes/
        mkdir -p deploy-backend/models
        cp -r backend/models/* deploy-backend/models/
        mkdir -p deploy-backend/uploads
        cp -r backend/uploads/* deploy-backend/uploads/ || true
        
        # Create production env file
        echo "NODE_ENV=production" > deploy-backend/.env
        echo "PORT=3000" >> deploy-backend/.env
        echo "DB_HOST=localhost" >> deploy-backend/.env
        echo "DB_NAME=wsxcblqh_ix" >> deploy-backend/.env
        echo "DB_USER=wsxcblqh_thanh" >> deploy-backend/.env
        echo "DB_PASS=@Thanh562184" >> deploy-backend/.env
        
        # Install only production dependencies
        cd deploy-backend
        npm install --omit=dev --no-package-lock

    # Deploy Backend with specific excludes
    - name: Deploy Backend
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: star-siec.edu.vn
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: deploy-backend/
        server-dir: /ix.star-siec.edu.vn/backend/
        dangerous-clean-slate: true
        exclude: |
          **/@ckeditor/**
          **/ckeditor5-**/**
          **/node_modules/@ckeditor/**
          **/*.map
          **/*.md
          **/test/**
          **/tests/**
          **/.git*/**
          **/.npm/**
          package-lock.json

    # Restart Server with better error handling
    - name: Restart Server
      run: |
        echo "<?php
        \$output = '';
        
        // Run npm install
        \$output .= 'Running npm install...' . PHP_EOL;
        \$install = shell_exec('cd /home/wsxcblqh/ix.star-siec.edu.vn/backend && /usr/local/bin/npm install --omit=dev 2>&1');
        \$output .= \$install . PHP_EOL;
        
        // Restart server with PM2
        \$output .= 'Restarting server...' . PHP_EOL;
        \$restart = shell_exec('/usr/local/bin/pm2 restart server.js 2>&1 || /usr/local/bin/pm2 start server.js 2>&1');
        \$output .= \$restart . PHP_EOL;
        
        echo \$output;
        ?>" > restart.php
        
        # Upload and execute restart script
        curl --retry 3 -T restart.php "ftp://${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}@star-siec.edu.vn/ix.star-siec.edu.vn/"
        sleep 2
        curl -L "https://ix.star-siec.edu.vn/restart.php"
        rm restart.php